prefix adms:        <http://www.w3.org/ns/adms#>
prefix alstom:      <http://www.alstom.com/grid/CIM-schema-cim15-extension#>
prefix cdpsm:       <http://iec.ch/TC57/CIM/CDPSM/SchemaExtension/2/0#>
prefix cim15:       <http://iec.ch/TC57/2010/CIM-schema-cim15#>
prefix cim16:       <http://iec.ch/TC57/2013/CIM-schema-cim16#>
prefix cim17:       <http://iec.ch/TC57/CIM100#>
prefix cim:         <https://cim.ucaiug.io/ns#>
prefix cimr:        <https://cim.ucaiug.io/rules#>
prefix cims:        <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#>
prefix dc:          <http://purl.org/dc/elements/1.1/>
prefix dcat:        <http://www.w3.org/ns/dcat#>
prefix dct:         <http://purl.org/dc/terms/>
prefix entsoe_prof: <http://entsoe.eu/Secretariat/ProfileExtension/1#>
prefix entsoe_sch:  <http://entsoe.eu/CIM/SchemaExtension/3/1#>
prefix eu1:         <http://iec.ch/TC57/CIM100-European#>
prefix eu:          <https://cim.ucaiug.io/ns/eu#>
prefix eu_ext:      <http://iec.ch/TC57/CIM100-EuropeanExtension/1/0#>
prefix form:        <https://form.statnett.no/voc/form-ksd-extensions#>
prefix form_ann:    <https://form.statnett.no/schema/annotation#>
prefix geo:         <http://www.opengis.net/ont/geosparql#>
prefix iec61968:    <http://iec.ch/TC57/Inf/61968#>
prefix md:          <http://iec.ch/TC57/61970-552/ModelDescription/1#>
prefix nc-no:       <https://cim4.eu/ns/nc-no#>
prefix nc1:         <http://entsoe.eu/ns/nc#>
prefix nc:          <https://cim4.eu/ns/nc#>
prefix nek:         <http://NEK.no/NK57/CIM/CIM100-Extension/1/0#>
prefix onto:        <http://www.ontotext.com/>
prefix owl:         <http://www.w3.org/2002/07/owl#>
prefix prefix:      <http://qudt.org/vocab/prefix/>
prefix prov:        <http://www.w3.org/ns/prov#>
prefix psys:        <http://proton.semanticweb.org/protonsys#>
prefix pti:         <http://www.pti-us.com/PTI_CIM-schema-cim16#>
prefix qkdv:         <http://qudt.org/vocab/dimensionvector/>
prefix quantitykind: <http://qudt.org/vocab/quantitykind/>
prefix qudt:        <http://qudt.org/schema/qudt/>
prefix rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs:        <http://www.w3.org/2000/01/rdf-schema#>
prefix sh:          <http://www.w3.org/ns/shacl#>
prefix skos:        <http://www.w3.org/2004/02/skos/core#>
prefix so:          <http://www.ontotext.com/semantic-object#>
prefix statnett:    <http://www.statnett.no/CIM-schema-cim15-extension#>
prefix uml1:        <http://langdale.com.au/2005/UML#>
prefix uml:         <http://iec.ch/TC57/NonStandard/UML#>
prefix unit:        <http://qudt.org/vocab/unit/>
prefix xsd:         <http://www.w3.org/2001/XMLSchema#>


# Describe all ontology terms (classes, props and enum values) used in instance data
construct {
  ?x ?p ?o; rdfs:comment ?new.
  ?x a ?missing
}
from onto:explicit # use only explicit statements in the description
where {
  # Use federation to leverage inference when finding terms used in explict or inferred statements
  {
    service <repository:cim> {
      select distinct ?x {
        { # properties
          [] ?x []
        } union {
          # classes
          [] a ?x
        } union {
          # enumeration values
          values ?idObjClass {cim:IdentifiedObject cim15:IdentifiedObject cim16:IdentifiedObject cim17:IdentifiedObject}
          ?thing a ?idObjClass; ?prop ?x
          filter(isIRI(?x))
          filter(?prop not in (skos:exactMatch, rdf:type, 
            nc:StaticPropertyRange.PropertyReference, nc:GridStateAlteration.PropertyReference, nc:PinEquipment.PropertyReference, # https://github.com/Sveino/Inst4CIM-KG/issues/145
            cim:TransformerEndInfo.TransformerTankInfo, # https://github.com/statnett/Nordic44/issues/69
            nc-no:ACLineSegmentSpan.ACLineSegment # https://github.com/3lbits/CIM4NoUtility/issues/391
          ))
          filter not exists {
            values ?bizType {cim:IdentifiedObject cim:DiagramObjectPoint cim:PositionPoint geo:Geometry cim:CurveData
              cim:SvStatus cim:SvSwitch cim:SvVoltage cim:SvPowerFlow cim:SvTapStep cim:SvShuntCompensatorSections}
            ?x a ?bizType
          }
        }
      }
    }
  }
  union {
    ?x rdfs:isDefinedBy cimr:
  }
  filter(!strstarts(str(?x),str(rdf:)))
  filter(!strstarts(str(?x),str(rdfs:)))
  filter(!strstarts(str(?x),str(so:)))
  filter(!strstarts(str(?x),str(owl:)))
  optional {
    ?x ?p ?o .
    filter(?p not in (cims:belongsToCategory, cims:stereotype, cims:AssociationUsed,
                      uml1:baseuri, uml1:hasStereotype, uml1:id,
                      owl:propertyChainAxiom, 
                      rdfs:isDefinedBy, rdfs:comment,
                      qudt:applicableSystem, qudt:iec61360Code, qudt:informativeReference, qudt:hasFactorUnit, qudt:ucumCode, qudt:wikidataMatch, qudt:dbpediaMatch, qudt:latexDefinition,
                      sh:property
    ))
    filter(?x not in (cims:belongsToCategory))
  }
  # if the term is not defined, we'll declare it as cims:MISSING
  bind(if(exists {?x a []; rdfs:label []}, ?UNDEF, cims:MISSING) as ?missing)
  # shorten overly long term descriptions
  optional {
    ?x rdfs:comment ?old .
    bind(if(strlen(?old)>500,replace(replace(?old,"\n"," "),"(.{500}.*?) .*","$1"),?old) as ?new)
  }
} order by ?x
