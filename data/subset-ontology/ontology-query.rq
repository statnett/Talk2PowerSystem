prefix adms:  <http://www.w3.org/ns/adms#>
prefix cim:   <https://cim.ucaiug.io/ns#>
prefix cimr:  <https://cim.ucaiug.io/rules#>
prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#>
prefix dc:    <http://purl.org/dc/elements/1.1/>
prefix dcat:  <http://www.w3.org/ns/dcat#>
prefix dct:   <http://purl.org/dc/terms/>
prefix eu:    <https://cim.ucaiug.io/ns/eu#>
prefix geo:   <http://www.opengis.net/ont/geosparql#>
prefix md:    <http://iec.ch/TC57/61970-552/ModelDescription/1#>
prefix nc-no: <https://cim4.eu/ns/nc-no#>
prefix nc:    <https://cim4.eu/ns/nc#>
prefix onto:  <http://www.ontotext.com/>
prefix so:    <http://www.ontotext.com/semantic-object#>
prefix owl:   <http://www.w3.org/2002/07/owl#>
prefix prov:  <http://www.w3.org/ns/prov#>
prefix psys:  <http://proton.semanticweb.org/protonsys#>
prefix qudt:  <http://qudt.org/schema/qudt/>
prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix skos:  <http://www.w3.org/2004/02/skos/core#>
prefix uml:   <http://iec.ch/TC57/NonStandard/UML#>
prefix unit:  <http://qudt.org/vocab/unit/>

# Describe all ontology terms (classes, props and enum values) used in instance data
construct {
  ?x ?p ?o; rdfs:comment ?new.
  ?x a ?missing
}
from onto:explicit # use only explicit statements in the description
where {
  # Use federation to leverage inference when finding terms used in explict or inferred statements
  {
    service <repository:cim> {
      select distinct ?x {
        { # properties
          [] ?x []
        } union {
          # classes
          [] a ?x
        } union {
          # enumeration values
          ?thing a cim:IdentifiedObject; ?prop ?x
          filter(isIRI(?x))
          filter(?prop not in (skos:exactMatch, rdf:type, 
            nc:StaticPropertyRange.PropertyReference, nc:GridStateAlteration.PropertyReference, nc:PinEquipment.PropertyReference, # https://github.com/Sveino/Inst4CIM-KG/issues/145
            cim:TransformerEndInfo.TransformerTankInfo, # https://github.com/statnett/Nordic44/issues/69
            nc-no:ACLineSegmentSpan.ACLineSegment # https://github.com/3lbits/CIM4NoUtility/issues/391
          ))
          filter not exists {
            values ?bizType {cim:IdentifiedObject cim:DiagramObjectPoint cim:PositionPoint geo:Geometry cim:CurveData
              cim:SvStatus cim:SvSwitch cim:SvVoltage cim:SvPowerFlow cim:SvTapStep cim:SvShuntCompensatorSections}
            ?x a ?bizType
          }
        }
      }
    }
  }
  union {
    ?x rdfs:isDefinedBy cimr:
  }
  filter(!strstarts(str(?x),str(rdf:)))
  filter(!strstarts(str(?x),str(rdfs:)))
  filter(!strstarts(str(?x),str(so:)))
  filter(!strstarts(str(?x),str(owl:)))
  optional {
    ?x ?p ?o .
    filter(?p not in (cims:belongsToCategory,owl:propertyChainAxiom,cims:stereotype,cims:AssociationUsed,rdfs:isDefinedBy,rdfs:comment))
    filter(?x not in (cims:belongsToCategory))
  }
  # if the term is not defined, we'll declare it as cims:MISSING
  bind(if(exists {?x a []; rdfs:label []}, ?UNDEF, cims:MISSING) as ?missing)
  # shorten overly long term descriptions
  optional {
    ?x rdfs:comment ?old .
    bind(if(strlen(?old)>500,replace(replace(?old,"\n"," "),"(.{500}.*?) .*","$1"),?old) as ?new)
  }
} order by ?x
