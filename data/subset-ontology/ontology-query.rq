PREFIX cim: <https://cim.ucaiug.io/ns#>
PREFIX cimr: <https://cim.ucaiug.io/rules#>
PREFIX cims: <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX eu: <https://cim.ucaiug.io/ns/eu#>
PREFIX nc: <https://cim4.eu/ns/nc#>
PREFIX md: <http://iec.ch/TC57/61970-552/ModelDescription/1#>
PREFIX onto: <http://www.ontotext.com/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX psys: <http://proton.semanticweb.org/protonsys#>
PREFIX qudt: <http://qudt.org/schema/qudt/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uml: <http://iec.ch/TC57/NonStandard/UML#>
PREFIX unit: <http://qudt.org/vocab/unit/>
PREFIX adms: <http://www.w3.org/ns/adms#>

CONSTRUCT {
    ?x ?p ?o .
}
# describing the terms using only explicit statements
FROM onto:explicit 
WHERE {
    {
        # using federation to be able to use inference
        # to find all classes, props and enums
        # used in both explict and inferred statements
        SERVICE <repository:nordic44> {
            SELECT DISTINCT ?x
            {
                {         # properties
                    [] ?x []
                } UNION { # classes
                    [] a ?x
                } UNION { # enumeration values
                    ?x a ?enum.
                    ?enum cims:stereotype uml:enumeration
                    FILTER EXISTS {
                        ?thing a cim:IdentifiedObject; ?prop ?x
                    }
                }
            }
        }
    }
    UNION {
        ?x rdfs:isDefinedBy cimr:
    }
    ?x ?p ?o .
    filter(?p not in (cims:belongsToCategory,owl:propertyChainAxiom,cims:stereotype,cims:AssociationUsed,cims:multiplicity,rdfs:isDefinedBy))
    filter(?x not in (cims:belongsToCategory))  
}
